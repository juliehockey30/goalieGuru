{"ast":null,"code":"var _jsxFileName = \"/Users/julieneuburger/Desktop/GoalieGuru/src/components/camps/Camps.js\";\nimport React, { Component } from 'react';\nimport { Background, Wrapper, CampHeader, Header, Subheader, LoaderWrapper, StyledLoader, CampCardsWrapper } from './Camps.styled.js';\nimport Modal from './modal/Modal.js';\nimport CampCard from './campCard/CampCard.js';\nimport * as firebase from 'firebase';\n\nclass Camps extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      camps: [],\n      loading: true,\n      selectedCamp: {},\n      modalContent: 'campDetails'\n    };\n    this.elementClicked = false;\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.getCamps = this.getCamps.bind(this);\n    this.renderCampCards = this.renderCampCards.bind(this);\n    this.setModalContent = this.setModalContent.bind(this);\n  }\n\n  componentWillMount() {\n    this.getCamps();\n  }\n\n  showModal(camp) {\n    this.setState({\n      showModal: true,\n      selectedCamp: camp\n    });\n  }\n\n  setModalContent(content) {\n    if (!this.state.showModal) {\n      this.setState({\n        showModal: true,\n        modalContent: content\n      });\n    } else {\n      this.setState({\n        modalContent: content\n      });\n    }\n  }\n\n  hideModal() {\n    this.setState({\n      showModal: false,\n      modalContent: 'campDetails'\n    });\n  }\n\n  getCamps() {\n    return firebase.database().ref('/camps/').once('value').then(snapshot => {\n      let camps = snapshot.val();\n      this.setState({\n        camps\n      }, () => {\n        this.setState({\n          loading: false\n        });\n      });\n    });\n  }\n\n  renderCampCards() {\n    return this.state.camps.map(camp => React.createElement(CampCard, {\n      camp: camp,\n      setPage: this.props.setPage,\n      showModal: this.showModal,\n      setModalContent: this.setModalContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(LoaderWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(StyledLoader, {\n        src: \"https://media1.tenor.com/images/e68cc33983bed347554ce23fe2bd08bd/tenor.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Background, {\n      id: \"camps\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(CampHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"AVAILABLE CAMPS & CLINICS\"), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Click on any camp to view more details about it!\"), React.createElement(Subheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"If you have any questions, please contact Coach Karen directly.\"), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.showModal ? React.createElement(Modal, {\n      hideModal: this.hideModal,\n      modalContent: this.state.modalContent,\n      selectedCamp: this.state.selectedCamp,\n      setModalContent: this.setModalContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }) : null, React.createElement(CampCardsWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.renderCampCards())));\n  }\n\n}\n\nexport default Camps;","map":{"version":3,"sources":["/Users/julieneuburger/Desktop/GoalieGuru/src/components/camps/Camps.js"],"names":["React","Component","Background","Wrapper","CampHeader","Header","Subheader","LoaderWrapper","StyledLoader","CampCardsWrapper","Modal","CampCard","firebase","Camps","constructor","props","state","showModal","camps","loading","selectedCamp","modalContent","elementClicked","bind","hideModal","getCamps","renderCampCards","setModalContent","componentWillMount","camp","setState","content","database","ref","once","then","snapshot","val","map","setPage","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Background,\n  Wrapper,\n  CampHeader,\n  Header,\n  Subheader,\n  LoaderWrapper,\n  StyledLoader,\n  CampCardsWrapper,\n} from './Camps.styled.js';\nimport Modal from './modal/Modal.js'\nimport CampCard from './campCard/CampCard.js'\nimport * as firebase from 'firebase';\n\nclass Camps extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      showModal: false,\n      camps: [],\n      loading: true,\n      selectedCamp: {},\n      modalContent: 'campDetails'\n    };\n\n    this.elementClicked = false\n\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.getCamps = this.getCamps.bind(this);\n    this.renderCampCards = this.renderCampCards.bind(this);\n    this.setModalContent = this.setModalContent.bind(this);\n  }\n\n  componentWillMount() {\n    this.getCamps();\n  }\n\n  showModal(camp) {\n      this.setState({ showModal: true, selectedCamp: camp });\n  }\n\n  setModalContent(content){\n    if(!this.state.showModal) {\n      this.setState({ showModal: true, modalContent: content})\n    } else {\n      this.setState({ modalContent: content })\n    }\n  }\n\n  hideModal() {\n    this.setState({ showModal: false, modalContent: 'campDetails' });\n  }\n\n  getCamps() {\n    return firebase.database().ref('/camps/').once('value').then((snapshot) => {\n      let camps = (snapshot.val());\n      this.setState({ camps }, () => {\n        this.setState({ loading: false });\n      });\n    });\n  }\n\n  renderCampCards() {\n    return this.state.camps.map((camp) =>\n      <CampCard\n        camp={camp}\n        setPage={this.props.setPage}\n        showModal={this.showModal}\n        setModalContent={this.setModalContent}\n      />\n    );\n  }\n\n  render() {\n    if(this.state.loading){\n      return (\n        <LoaderWrapper>\n          <StyledLoader src=\"https://media1.tenor.com/images/e68cc33983bed347554ce23fe2bd08bd/tenor.gif\" />\n        </LoaderWrapper>\n      );\n    }\n\n    return (\n      <Background id=\"camps\">\n        <CampHeader>AVAILABLE CAMPS & CLINICS</CampHeader>\n        <Header>Click on any camp to view more details about it!</Header>\n        <Subheader>If you have any questions, please contact Coach Karen directly.</Subheader>\n        <Wrapper>\n          {this.state.showModal ?\n            <Modal\n              hideModal={this.hideModal}\n              modalContent={this.state.modalContent}\n              selectedCamp={this.state.selectedCamp}\n              setModalContent={this.setModalContent}\n            />\n          : null}\n          <CampCardsWrapper>\n            {this.renderCampCards()}\n          </CampCardsWrapper>\n        </Wrapper>\n      </Background>\n    );\n  }\n}\n\nexport default Camps;\n"]},"metadata":{},"sourceType":"module"}